#BlueJ class context
comment0.target=GameRunner
comment1.params=args
comment1.target=void\ main(java.lang.String[])
comment10.params=totalBattles\ myLevel\ oppLevel\ equip\ rarity
comment10.target=void\ simulation(int,\ int,\ int,\ boolean,\ int)
comment10.text=\ \n\ Simulate\ Character\ battling\ against\ a\ Monster\n\ <p>\n\ Statistics\ to\ print\:\ total\ battles,\ wins,\ losses,\ \n\ rounds\ (two-way\ attack,\ if\ possible),\ average\ round/battle,\ and\ win\ percentage.\n\ <p>\n\ Entities\ will\ not\ gain\ experience\ through\ battles;\ Equipments\ will\ lose\ durability\ accordingly\n\ (see\:\ Player.equipmentUsed();\ HP\ are\ only\ restored\ if\ Entity\ faints\n\ \n\ @param\ battles\ the\ number\ of\ battles\ to\ simulation\ (a\ battle\ lasts\ until\ an\ Entity\ faints)\n\ @param\ mylevel\ the\ level\ to\ set\ Character\ at\n\ @param\ oppLevel\ the\ level\ to\ set\ Entity\ at\n\ @param\ equip\ true\ to\ fullEquip()\ Player,\ else\ false\n\ @param\ rarity\ the\ rarity\ to\ set\ equipments\ at\ (1~7\ inclusive)\n
comment2.params=floor\ player
comment2.target=void\ runMap(java.lang.String,\ Player)
comment3.params=val
comment3.target=void\ setClose(boolean)
comment4.params=val
comment4.target=void\ setSaved(boolean)
comment5.params=time
comment5.target=void\ slow(int)
comment6.params=text\ val
comment6.target=void\ slowPrint(java.lang.String,\ int)
comment6.text=\n\ Slow\ down\ the\ S.o.p\ of\ a\ given\ String\n\ \n\ @param\ text\ the\ String\ to\ print\n\ @param\ val\ the\ value\ to\ slow\ down\ S.o.p\n
comment7.params=
comment7.target=void\ confirm()
comment7.text=\n\ Simple\ user\ confirmation\n
comment8.params=text\ repeat\ val
comment8.target=void\ printRepeat(java.lang.String,\ int,\ int)
comment8.text=\n\ Prints\ a\ slowPrint\ String\ for\ a\ certain\ amount\ of\ times\n\ \n\ @param\ text\ the\ String\ to\ print\n\ @param\ repeat\ the\ number\ of\ times\ to\ print\ param\ text\n\ @param\ val\ the\ value\ to\ slow\ down\ S.o.p\n
comment9.params=min\ max
comment9.target=int\ StringInputInRange(int,\ int)
comment9.text=\n\ Check\ if\ user\ input\ is\ within\ an\ inclusive\ range\ of\ numbers\n\ <p>\n\ Used\ to\ prevent\ InputMisMatchException.\n\ \n\ @param\ min\ the\ mininum\ inclusive\ range\n\ @param\ max\ the\ maximum\ inclusive\ range\n\ @return\ the\ Integer\ value\ of\ user's\ input,\ return\ -1\ if\ out\ of\ range\n
numComments=11
